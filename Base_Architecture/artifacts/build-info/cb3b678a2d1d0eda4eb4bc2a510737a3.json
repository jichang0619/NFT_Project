{
	"id": "cb3b678a2d1d0eda4eb4bc2a510737a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"whitelist.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\ncontract Storage {\r\n    mapping(address => uint256) private whitelist_addr;\r\n\r\n    // whitelist 작성\r\n    constructor() {\r\n        address a = 0xb2f8c60b26a53Ae960536333311CB4a04f519084;\r\n        whitelist_addr[a] = 1;\r\n    }\r\n\r\n    function is_whitelist(address addr) internal virtual returns(bool){\r\n        if (whitelist_addr[addr] == 1)\r\n        {\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function is_whitelist_2() public view returns(bool){\r\n        if (whitelist_addr[msg.sender] == 1)\r\n        {\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"whitelist.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "is_whitelist_2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"whitelist.sol\":63:750  contract Storage {\r... */\n  mstore(0x40, 0x80)\n    /* \"whitelist.sol\":171:290  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"whitelist.sol\":196:205  address a */\n  0x00\n    /* \"whitelist.sol\":208:250  0xb2f8c60b26a53Ae960536333311CB4a04f519084 */\n  0xb2f8c60b26a53ae960536333311cb4a04f519084\n    /* \"whitelist.sol\":196:250  address a = 0xb2f8c60b26a53Ae960536333311CB4a04f519084 */\n  swap1\n  pop\n    /* \"whitelist.sol\":281:282  1 */\n  0x01\n    /* \"whitelist.sol\":261:275  whitelist_addr */\n  0x00\n    /* \"whitelist.sol\":261:278  whitelist_addr[a] */\n  dup1\n    /* \"whitelist.sol\":276:277  a */\n  dup4\n    /* \"whitelist.sol\":261:278  whitelist_addr[a] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"whitelist.sol\":261:282  whitelist_addr[a] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"whitelist.sol\":185:290  {\r... */\n  pop\n    /* \"whitelist.sol\":63:750  contract Storage {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"whitelist.sol\":63:750  contract Storage {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7518a2a7\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"whitelist.sol\":531:747  function is_whitelist_2() public view returns(bool){\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"whitelist.sol\":577:581  bool */\n      0x00\n        /* \"whitelist.sol\":627:628  1 */\n      0x01\n        /* \"whitelist.sol\":597:611  whitelist_addr */\n      0x00\n        /* \"whitelist.sol\":597:623  whitelist_addr[msg.sender] */\n      dup1\n        /* \"whitelist.sol\":612:622  msg.sender */\n      caller\n        /* \"whitelist.sol\":597:623  whitelist_addr[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"whitelist.sol\":597:628  whitelist_addr[msg.sender] == 1 */\n      eq\n        /* \"whitelist.sol\":593:740  if (whitelist_addr[msg.sender] == 1)\r... */\n      iszero\n      tag_9\n      jumpi\n        /* \"whitelist.sol\":661:665  true */\n      0x01\n        /* \"whitelist.sol\":654:665  return true */\n      swap1\n      pop\n      jump(tag_8)\n        /* \"whitelist.sol\":593:740  if (whitelist_addr[msg.sender] == 1)\r... */\n    tag_9:\n        /* \"whitelist.sol\":723:728  false */\n      0x00\n        /* \"whitelist.sol\":716:728  return false */\n      swap1\n      pop\n        /* \"whitelist.sol\":531:747  function is_whitelist_2() public view returns(bool){\r... */\n    tag_8:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_12:\n        /* \"#utility.yul\":88:109   */\n      tag_14\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:332   */\n    tag_7:\n        /* \"#utility.yul\":209:213   */\n      0x00\n        /* \"#utility.yul\":247:249   */\n      0x20\n        /* \"#utility.yul\":236:245   */\n      dup3\n        /* \"#utility.yul\":232:250   */\n      add\n        /* \"#utility.yul\":224:250   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:325   */\n      tag_17\n        /* \"#utility.yul\":322:323   */\n      0x00\n        /* \"#utility.yul\":311:320   */\n      dup4\n        /* \"#utility.yul\":307:324   */\n      add\n        /* \"#utility.yul\":298:304   */\n      dup5\n        /* \"#utility.yul\":260:325   */\n      tag_12\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":122:332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":338:428   */\n    tag_15:\n        /* \"#utility.yul\":372:379   */\n      0x00\n        /* \"#utility.yul\":415:420   */\n      dup2\n        /* \"#utility.yul\":408:421   */\n      iszero\n        /* \"#utility.yul\":401:422   */\n      iszero\n        /* \"#utility.yul\":390:422   */\n      swap1\n      pop\n        /* \"#utility.yul\":338:428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d02c0069317ffefe716c6255bac552ba88a2266a6dd735615cb28f5ff04da27964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600073b2f8c60b26a53ae960536333311cb4a04f519084905060016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506101078061007e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80637518a2a714602d575b600080fd5b60336047565b604051603e919060ac565b60405180910390f35b600060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141560975760019050609c565b600090505b90565b60a68160c5565b82525050565b600060208201905060bf6000830184609f565b92915050565b6000811515905091905056fea2646970667358221220d02c0069317ffefe716c6255bac552ba88a2266a6dd735615cb28f5ff04da27964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xB2F8C60B26A53AE960536333311CB4A04F519084 SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0x107 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7518A2A7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH1 0x97 JUMPI PUSH1 0x1 SWAP1 POP PUSH1 0x9C JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xA6 DUP2 PUSH1 0xC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xBF PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0x2C STOP PUSH10 0x317FFEFE716C6255BAC5 MSTORE 0xBA DUP9 LOG2 0x26 PUSH11 0x6DD735615CB28F5FF04DA2 PUSH26 0x64736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "63:687:0:-:0;;;171:119;;;;;;;;;;196:9;208:42;196:54;;281:1;261:14;:17;276:1;261:17;;;;;;;;;;;;;;;:21;;;;185:105;63:687;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@is_whitelist_2_58": {
									"entryPoint": 71,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "214:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "224:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "236:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "224:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "298:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "322:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "307:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "260:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "209:4:1",
														"type": ""
													}
												],
												"src": "122:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "390:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "415:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "408:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "408:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "390:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "362:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "372:7:1",
														"type": ""
													}
												],
												"src": "338:90:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80637518a2a714602d575b600080fd5b60336047565b604051603e919060ac565b60405180910390f35b600060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141560975760019050609c565b600090505b90565b60a68160c5565b82525050565b600060208201905060bf6000830184609f565b92915050565b6000811515905091905056fea2646970667358221220d02c0069317ffefe716c6255bac552ba88a2266a6dd735615cb28f5ff04da27964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7518A2A7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH1 0x97 JUMPI PUSH1 0x1 SWAP1 POP PUSH1 0x9C JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xA6 DUP2 PUSH1 0xC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xBF PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0x2C STOP PUSH10 0x317FFEFE716C6255BAC5 MSTORE 0xBA DUP9 LOG2 0x26 PUSH11 0x6DD735615CB28F5FF04DA2 PUSH26 0x64736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "63:687:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:216;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;577:4;627:1;597:14;:26;612:10;597:26;;;;;;;;;;;;;;;;:31;593:147;;;661:4;654:11;;;;593:147;723:5;716:12;;531:216;;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:210::-;209:4;247:2;236:9;232:18;224:26;;260:65;322:1;311:9;307:17;298:6;260:65;:::i;:::-;122:210;;;;:::o;338:90::-;372:7;415:5;408:13;401:21;390:32;;338:90;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "52600",
								"executionCost": "22322",
								"totalCost": "74922"
							},
							"external": {
								"is_whitelist_2()": "2547"
							},
							"internal": {
								"is_whitelist(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 750,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 290,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 290,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 290,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 196,
									"end": 205,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "B2F8C60B26A53AE960536333311CB4A04F519084"
								},
								{
									"begin": 196,
									"end": 250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 196,
									"end": 250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 281,
									"end": 282,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 261,
									"end": 275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 276,
									"end": 277,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 261,
									"end": 282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 261,
									"end": 282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 261,
									"end": 282,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 261,
									"end": 282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 185,
									"end": 290,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 750,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 750,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 750,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 750,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d02c0069317ffefe716c6255bac552ba88a2266a6dd735615cb28f5ff04da27964736f6c63430008070033",
									".code": [
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "7518A2A7"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 597,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 622,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 597,
											"end": 623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 597,
											"end": 623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 597,
											"end": 623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 593,
											"end": 740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 593,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 593,
											"end": 740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 661,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 654,
											"end": 665,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 593,
											"end": 740,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 593,
											"end": 740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 723,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 531,
											"end": 747,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 232,
											"end": 250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 307,
											"end": 324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 338,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 338,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 372,
											"end": 379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 390,
											"end": 422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 390,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"is_whitelist_2()": "7518a2a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"is_whitelist_2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"whitelist.sol\":\"Storage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"whitelist.sol\":{\"keccak256\":\"0x88ec7dff3297560831d02dace19c7185d05126b42365caec6d67c8c37bca363d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://169bc581c8a0724ba4af65372876e51ed56987bbd4401bbb05f34f88acacfb92\",\"dweb:/ipfs/QmP1CeN4wcLjZha1H8BJsdhtHAfDoGiEFhFXwe87pTmgJH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "whitelist.sol:Storage",
								"label": "whitelist_addr",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"whitelist.sol": {
				"ast": {
					"absolutePath": "whitelist.sol",
					"exportedSymbols": {
						"Storage": [
							59
						]
					},
					"id": 60,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "Storage",
							"nameLocation": "72:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "whitelist_addr",
									"nameLocation": "123:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 59,
									"src": "87:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "95:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "87:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "106:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "185:105:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "204:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "196:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 8,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "196:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "307862326638633630623236613533416539363035333633333333313143423461303466353139303834",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "208:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0xb2f8c60b26a53Ae960536333311CB4a04f519084"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "196:54:0"
											},
											{
												"expression": {
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 12,
															"name": "whitelist_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "261:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 14,
														"indexExpression": {
															"id": 13,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "276:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "261:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "261:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "261:21:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:0:0"
									},
									"scope": 59,
									"src": "171:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "364:159:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 26,
															"name": "whitelist_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "379:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 28,
														"indexExpression": {
															"id": 27,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "394:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "379:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "403:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "379:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 36,
													"nodeType": "Block",
													"src": "477:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "499:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 25,
															"id": 35,
															"nodeType": "Return",
															"src": "492:12:0"
														}
													]
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "375:141:0",
												"trueBody": {
													"id": 33,
													"nodeType": "Block",
													"src": "415:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "437:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 25,
															"id": 32,
															"nodeType": "Return",
															"src": "430:11:0"
														}
													]
												}
											}
										]
									},
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "is_whitelist",
									"nameLocation": "307:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "328:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "320:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:14:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "359:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "359:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:6:0"
									},
									"scope": 59,
									"src": "298:225:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "582:165:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 44,
															"name": "whitelist_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "597:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"expression": {
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "612:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "612:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "597:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "627:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "597:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "701:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "723:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 43,
															"id": 54,
															"nodeType": "Return",
															"src": "716:12:0"
														}
													]
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "593:147:0",
												"trueBody": {
													"id": 52,
													"nodeType": "Block",
													"src": "639:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "661:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 43,
															"id": 51,
															"nodeType": "Return",
															"src": "654:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7518a2a7",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "is_whitelist_2",
									"nameLocation": "540:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "577:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "577:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:6:0"
									},
									"scope": 59,
									"src": "531:216:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 60,
							"src": "63:687:0",
							"usedErrors": []
						}
					],
					"src": "36:714:0"
				},
				"id": 0
			}
		}
	}
}