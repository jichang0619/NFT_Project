{
	"id": "e4c417b3ad07a39ba89f128f9dac1bef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"whitelist.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\ncontract Storage {\r\n    mapping(address => uint256) private whitelist_addr;\r\n\r\n    // whitelist 작성\r\n    constructor() {\r\n        address a = 0xb2f8c60b26a53Ae960536333311CB4a04f519084;\r\n        whitelist_addr[a] = 1;\r\n    }\r\n\r\n    function is_whitelist(address addr) public view returns(bool){\r\n        if (whitelist_addr[addr] == 1)\r\n        {\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function is_whitelist_2() public view returns(bool){\r\n        if (whitelist_addr[msg.sender] == 1)\r\n        {\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"whitelist.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "is_whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "is_whitelist_2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"whitelist.sol\":63:745  contract Storage {\r... */\n  mstore(0x40, 0x80)\n    /* \"whitelist.sol\":171:290  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"whitelist.sol\":196:205  address a */\n  0x00\n    /* \"whitelist.sol\":208:250  0xb2f8c60b26a53Ae960536333311CB4a04f519084 */\n  0xb2f8c60b26a53ae960536333311cb4a04f519084\n    /* \"whitelist.sol\":196:250  address a = 0xb2f8c60b26a53Ae960536333311CB4a04f519084 */\n  swap1\n  pop\n    /* \"whitelist.sol\":281:282  1 */\n  0x01\n    /* \"whitelist.sol\":261:275  whitelist_addr */\n  0x00\n    /* \"whitelist.sol\":261:278  whitelist_addr[a] */\n  dup1\n    /* \"whitelist.sol\":276:277  a */\n  dup4\n    /* \"whitelist.sol\":261:278  whitelist_addr[a] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"whitelist.sol\":261:282  whitelist_addr[a] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"whitelist.sol\":185:290  {\r... */\n  pop\n    /* \"whitelist.sol\":63:745  contract Storage {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"whitelist.sol\":63:745  contract Storage {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7518a2a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xeb7b5a03\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"whitelist.sol\":526:742  function is_whitelist_2() public view returns(bool){\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"whitelist.sol\":298:518  function is_whitelist(address addr) public view returns(bool){\r... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"whitelist.sol\":526:742  function is_whitelist_2() public view returns(bool){\r... */\n    tag_6:\n        /* \"whitelist.sol\":572:576  bool */\n      0x00\n        /* \"whitelist.sol\":622:623  1 */\n      0x01\n        /* \"whitelist.sol\":592:606  whitelist_addr */\n      0x00\n        /* \"whitelist.sol\":592:618  whitelist_addr[msg.sender] */\n      dup1\n        /* \"whitelist.sol\":607:617  msg.sender */\n      caller\n        /* \"whitelist.sol\":592:618  whitelist_addr[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"whitelist.sol\":592:623  whitelist_addr[msg.sender] == 1 */\n      eq\n        /* \"whitelist.sol\":588:735  if (whitelist_addr[msg.sender] == 1)\r... */\n      iszero\n      tag_15\n      jumpi\n        /* \"whitelist.sol\":656:660  true */\n      0x01\n        /* \"whitelist.sol\":649:660  return true */\n      swap1\n      pop\n      jump(tag_14)\n        /* \"whitelist.sol\":588:735  if (whitelist_addr[msg.sender] == 1)\r... */\n    tag_15:\n        /* \"whitelist.sol\":718:723  false */\n      0x00\n        /* \"whitelist.sol\":711:723  return false */\n      swap1\n      pop\n        /* \"whitelist.sol\":526:742  function is_whitelist_2() public view returns(bool){\r... */\n    tag_14:\n      swap1\n      jump\t// out\n        /* \"whitelist.sol\":298:518  function is_whitelist(address addr) public view returns(bool){\r... */\n    tag_12:\n        /* \"whitelist.sol\":354:358  bool */\n      0x00\n        /* \"whitelist.sol\":398:399  1 */\n      0x01\n        /* \"whitelist.sol\":374:388  whitelist_addr */\n      0x00\n        /* \"whitelist.sol\":374:394  whitelist_addr[addr] */\n      dup1\n        /* \"whitelist.sol\":389:393  addr */\n      dup5\n        /* \"whitelist.sol\":374:394  whitelist_addr[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"whitelist.sol\":374:399  whitelist_addr[addr] == 1 */\n      eq\n        /* \"whitelist.sol\":370:511  if (whitelist_addr[addr] == 1)\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"whitelist.sol\":432:436  true */\n      0x01\n        /* \"whitelist.sol\":425:436  return true */\n      swap1\n      pop\n      jump(tag_17)\n        /* \"whitelist.sol\":370:511  if (whitelist_addr[addr] == 1)\r... */\n    tag_18:\n        /* \"whitelist.sol\":494:499  false */\n      0x00\n        /* \"whitelist.sol\":487:499  return false */\n      swap1\n      pop\n        /* \"whitelist.sol\":298:518  function is_whitelist(address addr) public view returns(bool){\r... */\n    tag_17:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_21:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_23\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_11:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":228:347   */\n    tag_26:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_29\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_21\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:596   */\n    tag_30:\n        /* \"#utility.yul\":568:589   */\n      tag_32\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":568:589   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:590   */\n      mstore\n        /* \"#utility.yul\":487:596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:812   */\n    tag_8:\n        /* \"#utility.yul\":689:693   */\n      0x00\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":716:725   */\n      dup3\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":704:730   */\n      swap1\n      pop\n        /* \"#utility.yul\":740:805   */\n      tag_35\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":791:800   */\n      dup4\n        /* \"#utility.yul\":787:804   */\n      add\n        /* \"#utility.yul\":778:784   */\n      dup5\n        /* \"#utility.yul\":740:805   */\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":602:812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":899:995   */\n    tag_38:\n        /* \"#utility.yul\":936:943   */\n      0x00\n        /* \"#utility.yul\":965:989   */\n      tag_40\n        /* \"#utility.yul\":983:988   */\n      dup3\n        /* \"#utility.yul\":965:989   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":954:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1091   */\n    tag_33:\n        /* \"#utility.yul\":1035:1042   */\n      0x00\n        /* \"#utility.yul\":1078:1083   */\n      dup2\n        /* \"#utility.yul\":1071:1084   */\n      iszero\n        /* \"#utility.yul\":1064:1085   */\n      iszero\n        /* \"#utility.yul\":1053:1085   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1097:1223   */\n    tag_41:\n        /* \"#utility.yul\":1134:1141   */\n      0x00\n        /* \"#utility.yul\":1174:1216   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1167:1172   */\n      dup3\n        /* \"#utility.yul\":1163:1217   */\n      and\n        /* \"#utility.yul\":1152:1217   */\n      swap1\n      pop\n        /* \"#utility.yul\":1097:1223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1469   */\n    tag_28:\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1475:1597   */\n    tag_24:\n        /* \"#utility.yul\":1548:1572   */\n      tag_48\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1548:1572   */\n      tag_38\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1541:1546   */\n      dup2\n        /* \"#utility.yul\":1538:1573   */\n      eq\n        /* \"#utility.yul\":1528:1591   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1528:1591   */\n    tag_49:\n        /* \"#utility.yul\":1475:1597   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220774e78aafefcf52fe13d099a9940a2ce452ecf0714ca4dc96cecfd30d8ea278b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600073b2f8c60b26a53ae960536333311cb4a04f519084905060016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505061023b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637518a2a71461003b578063eb7b5a0314610059575b600080fd5b610043610089565b6040516100509190610190565b60405180910390f35b610073600480360381019061006e9190610154565b6100e3565b6040516100809190610190565b60405180910390f35b600060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156100db57600190506100e0565b600090505b90565b600060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610135576001905061013a565b600090505b919050565b60008135905061014e816101ee565b92915050565b60006020828403121561016a576101696101e9565b5b60006101788482850161013f565b91505092915050565b61018a816101bd565b82525050565b60006020820190506101a56000830184610181565b92915050565b60006101b6826101c9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101f7816101ab565b811461020257600080fd5b5056fea2646970667358221220774e78aafefcf52fe13d099a9940a2ce452ecf0714ca4dc96cecfd30d8ea278b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xB2F8C60B26A53AE960536333311CB4A04F519084 SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0x23B DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7518A2A7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEB7B5A03 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0xDB JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x135 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x13A JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E DUP2 PUSH2 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x178 DUP5 DUP3 DUP6 ADD PUSH2 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18A DUP2 PUSH2 0x1BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6 DUP3 PUSH2 0x1C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7 DUP2 PUSH2 0x1AB JUMP JUMPDEST DUP2 EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4E78AAFEFCF52FE13D099A9940A2CE452ECF0714CA4DC96C 0xEC REVERT ADDRESS 0xD8 0xEA 0x27 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "63:682:0:-:0;;;171:119;;;;;;;;;;196:9;208:42;196:54;;281:1;261:14;:17;276:1;261:17;;;;;;;;;;;;;;;:21;;;;185:105;63:682;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@is_whitelist_2_58": {
									"entryPoint": 137,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@is_whitelist_39": {
									"entryPoint": 227,
									"id": 39,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1600:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "583:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "568:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:1",
														"type": ""
													}
												],
												"src": "487:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "778:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "802:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "740:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "666:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "678:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "689:4:1",
														"type": ""
													}
												],
												"src": "602:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "868:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "851:6:1",
														"type": ""
													}
												],
												"src": "818:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "965:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "954:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "926:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "936:7:1",
														"type": ""
													}
												],
												"src": "899:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1043:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1053:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1078:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1071:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1053:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1025:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1035:7:1",
														"type": ""
													}
												],
												"src": "1001:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1142:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1152:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1167:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1152:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1124:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1134:7:1",
														"type": ""
													}
												],
												"src": "1097:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1229:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1441:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1352:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1575:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1584:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1577:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1577:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1577:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1541:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1566:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1548:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1548:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1538:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:43:1"
															},
															"nodeType": "YulIf",
															"src": "1528:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1511:5:1",
														"type": ""
													}
												],
												"src": "1475:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80637518a2a71461003b578063eb7b5a0314610059575b600080fd5b610043610089565b6040516100509190610190565b60405180910390f35b610073600480360381019061006e9190610154565b6100e3565b6040516100809190610190565b60405180910390f35b600060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156100db57600190506100e0565b600090505b90565b600060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610135576001905061013a565b600090505b919050565b60008135905061014e816101ee565b92915050565b60006020828403121561016a576101696101e9565b5b60006101788482850161013f565b91505092915050565b61018a816101bd565b82525050565b60006020820190506101a56000830184610181565b92915050565b60006101b6826101c9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101f7816101ab565b811461020257600080fd5b5056fea2646970667358221220774e78aafefcf52fe13d099a9940a2ce452ecf0714ca4dc96cecfd30d8ea278b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7518A2A7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEB7B5A03 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0xDB JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x135 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x13A JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E DUP2 PUSH2 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x178 DUP5 DUP3 DUP6 ADD PUSH2 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18A DUP2 PUSH2 0x1BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6 DUP3 PUSH2 0x1C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7 DUP2 PUSH2 0x1AB JUMP JUMPDEST DUP2 EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4E78AAFEFCF52FE13D099A9940A2CE452ECF0714CA4DC96C 0xEC REVERT ADDRESS 0xD8 0xEA 0x27 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "63:682:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:216;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;298:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:216;572:4;622:1;592:14;:26;607:10;592:26;;;;;;;;;;;;;;;;:31;588:147;;;656:4;649:11;;;;588:147;718:5;711:12;;526:216;;:::o;298:220::-;354:4;398:1;374:14;:20;389:4;374:20;;;;;;;;;;;;;;;;:25;370:141;;;432:4;425:11;;;;370:141;494:5;487:12;;298:220;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;487:109;;:::o;602:210::-;689:4;727:2;716:9;712:18;704:26;;740:65;802:1;791:9;787:17;778:6;740:65;:::i;:::-;602:210;;;;:::o;899:96::-;936:7;965:24;983:5;965:24;:::i;:::-;954:35;;899:96;;;:::o;1001:90::-;1035:7;1078:5;1071:13;1064:21;1053:32;;1001:90;;;:::o;1097:126::-;1134:7;1174:42;1167:5;1163:54;1152:65;;1097:126;;;:::o;1352:117::-;1461:1;1458;1451:12;1475:122;1548:24;1566:5;1548:24;:::i;:::-;1541:5;1538:35;1528:63;;1587:1;1584;1577:12;1528:63;1475:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "114200",
								"executionCost": "22376",
								"totalCost": "136576"
							},
							"external": {
								"is_whitelist(address)": "2884",
								"is_whitelist_2()": "2547"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 745,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 290,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 290,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 290,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 171,
									"end": 290,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 196,
									"end": 205,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 250,
									"name": "PUSH",
									"source": 0,
									"value": "B2F8C60B26A53AE960536333311CB4A04F519084"
								},
								{
									"begin": 196,
									"end": 250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 196,
									"end": 250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 281,
									"end": 282,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 261,
									"end": 275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 276,
									"end": 277,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 261,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 278,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 261,
									"end": 282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 261,
									"end": 282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 261,
									"end": 282,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 261,
									"end": 282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 185,
									"end": 290,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 745,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 745,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 745,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 745,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 745,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220774e78aafefcf52fe13d099a9940a2ce452ecf0714ca4dc96cecfd30d8ea278b64736f6c63430008070033",
									".code": [
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "7518A2A7"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "EB7B5A03"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 745,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 617,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 588,
											"end": 735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 588,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 588,
											"end": 735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 656,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 649,
											"end": 660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 649,
											"end": 660,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 735,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 588,
											"end": 735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 526,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 374,
											"end": 394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 370,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 432,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 425,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 425,
											"end": 436,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 370,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 298,
											"end": 518,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 556,
											"end": 590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 704,
											"end": 730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 704,
											"end": 730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 954,
											"end": 989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 954,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1216,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1573,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"is_whitelist(address)": "eb7b5a03",
							"is_whitelist_2()": "7518a2a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"is_whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_whitelist_2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"whitelist.sol\":\"Storage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"whitelist.sol\":{\"keccak256\":\"0x33366e457f653ab8d0cf504d4805d5a33c7ca92529685205df0183f483a3c9e0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9c09b8f463b93dbc1ea977c38c4cd4f700b0cca70df51a0963f00bdc05ed3349\",\"dweb:/ipfs/QmaUbHaV87HvhphTyrHVZRW1EeYCnCted5ESNTdcw38dtG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "whitelist.sol:Storage",
								"label": "whitelist_addr",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"whitelist.sol": {
				"ast": {
					"absolutePath": "whitelist.sol",
					"exportedSymbols": {
						"Storage": [
							59
						]
					},
					"id": 60,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "Storage",
							"nameLocation": "72:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "whitelist_addr",
									"nameLocation": "123:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 59,
									"src": "87:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "95:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "87:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "106:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "185:105:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "204:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "196:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 8,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "196:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "307862326638633630623236613533416539363035333633333333313143423461303466353139303834",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "208:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0xb2f8c60b26a53Ae960536333311CB4a04f519084"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "196:54:0"
											},
											{
												"expression": {
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 12,
															"name": "whitelist_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "261:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 14,
														"indexExpression": {
															"id": 13,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "276:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "261:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "261:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "261:21:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:0:0"
									},
									"scope": 59,
									"src": "171:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "359:159:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 26,
															"name": "whitelist_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "374:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 28,
														"indexExpression": {
															"id": 27,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "389:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "374:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "398:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "374:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 36,
													"nodeType": "Block",
													"src": "472:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "494:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 25,
															"id": 35,
															"nodeType": "Return",
															"src": "487:12:0"
														}
													]
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "370:141:0",
												"trueBody": {
													"id": 33,
													"nodeType": "Block",
													"src": "410:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "432:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 25,
															"id": 32,
															"nodeType": "Return",
															"src": "425:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "eb7b5a03",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "is_whitelist",
									"nameLocation": "307:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "328:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "320:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:14:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "354:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:6:0"
									},
									"scope": 59,
									"src": "298:220:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "577:165:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 44,
															"name": "whitelist_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "592:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"expression": {
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "607:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "607:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "592:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "622:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "592:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "696:39:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "718:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 43,
															"id": 54,
															"nodeType": "Return",
															"src": "711:12:0"
														}
													]
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "588:147:0",
												"trueBody": {
													"id": 52,
													"nodeType": "Block",
													"src": "634:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "656:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 43,
															"id": 51,
															"nodeType": "Return",
															"src": "649:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7518a2a7",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "is_whitelist_2",
									"nameLocation": "535:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "572:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:6:0"
									},
									"scope": 59,
									"src": "526:216:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 60,
							"src": "63:682:0",
							"usedErrors": []
						}
					],
					"src": "36:709:0"
				},
				"id": 0
			}
		}
	}
}